local Addon, private = ...local _G = _Glocal ipairs = ipairslocal getmetatable = getmetatablelocal math = mathlocal string = stringlocal table = tablelocal type = typelocal dump = dumplocal Command = Commandlocal Event = Eventlocal Inspect = Inspectlocal UI = UI-- Frames cannot be deleted, keep a cache and only create new frames if the cache is emptylocal cachedLabels = { }setfenv(1, private)Ux = Ux or { }Ux.MailWindow = { }-- Private methods-- ============================================================================local function getGroupLabel(self, group)	local label	if(#cachedLabels == 0) then		label = UI.CreateFrame("Text", "", self)		label:SetFontSize(14)		label:SetBackgroundColor(1, 1, 1, 0.1)		function label:Dispose()			self:SetVisible(false)			table.insert(cachedLabels, self)		end		function label:SetInfo(sell, slots)			if(self:GetText() == L.CategoryName.sellable) then				self:SetText(string.format("%s (%i) - %s"), self:GetText(), slots, Utils.FormatCoin(sell))			end		end	else		label = table.remove(cachedLabels)		label:SetVisible(true)		label:SetParent(self)	end	label:SetText(self.groupKeys[group])	label:SetHeight(label:GetFullHeight())	return labelendlocal function sortGroups(self)	table.sort(self.groups, function(a, b) return self.groupSortFunc(a, b, self.groupKeys) end)endlocal function sortItems(self)	for _, group in ipairs(self.groups) do		table.sort(group, function(a, b) return self.sortFunc(a.type, b.type) end)	endendlocal function getGroups(self)	self.groups, self.groupKeys = ItemDB.GetGroupedItems(self.items, self.groupFunc)	sortGroups(self)	sortItems(self)endlocal function leftUp(self)endlocal function setCharacter(self)end-- Public methods-- ============================================================================function Ux.MailWindow.New(title, character, location, condensed, native)	local self = Ux.ItemWindowBase.New(title, character, "mail", true, nil)		self.mailButton:SetTexture("Rift", [[Data/\UI\item_icons\bag20.dds]])	function self.mailButton.Event.LeftDown()		Ux.ShowItemWindow(self.charSelector:GetText(), "inventory")	end	self.getGroups = getGroups	self.leftUp = leftUp	self.setCharacter = setCharacter	self.getGroupLabel = getGroupLabel	self.groupFunc = Group.Default.GetMail	self.groupSortFunc = Group.Default.SortByCategoryKey	self.sortFunc = Sort.Default.ByItemName		self:SetCharacter(character, "mail")		return selfend